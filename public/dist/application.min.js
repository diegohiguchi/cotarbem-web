"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ngMessages","ui.router","ui.bootstrap","ui.utils","angularFileUpload","angularjs-dropdown-multiselect","ui.utils.masks","angular-loading-bar"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider","$httpProvider","cfpLoadingBarProvider",function($locationProvider,$httpProvider,cfpLoadingBarProvider){$locationProvider.html5Mode(!0).hashPrefix("!"),$httpProvider.interceptors.push("authInterceptor")}]),angular.module(ApplicationConfiguration.applicationModuleName).run(["$rootScope","$state","Authentication",function($rootScope,$state,Authentication){function storePreviousState(state,params){state.data&&state.data.ignoreState||($state.previous={state:state,params:params,href:$state.href(state,params)})}$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){if(toState.data&&toState.data.roles&&toState.data.roles.length>0){var allowed=!1;toState.data.roles.forEach(function(role){return void 0!==Authentication.user.roles&&-1!==Authentication.user.roles.indexOf(role)?(allowed=!0,!0):void 0}),allowed||(event.preventDefault(),void 0!==Authentication.user&&"object"==typeof Authentication.user?$state.go("forbidden"):$state.go("authentication.signin").then(function(){storePreviousState(toState,toParams)}))}}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){storePreviousState(fromState,fromParams)})}]),angular.element(document).ready(function(){if(window.location.hash&&"#_=_"===window.location.hash)if(window.history&&history.pushState)window.history.pushState("",document.title,window.location.pathname);else{var scroll={top:document.body.scrollTop,left:document.body.scrollLeft};window.location.hash="",document.body.scrollTop=scroll.top,document.body.scrollLeft=scroll.left}angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("core.admin",["core"]),ApplicationConfiguration.registerModule("core.admin.routes",["ui.router"]),function(app){app.registerModule("cotacoes")}(ApplicationConfiguration),function(app){app.registerModule("notificacoes")}(ApplicationConfiguration),function(app){app.registerModule("solicitacoes")}(ApplicationConfiguration),function(app){app.registerModule("segmentos")}(ApplicationConfiguration),function(app){app.registerModule("subsegmentos")}(ApplicationConfiguration),ApplicationConfiguration.registerModule("users",["core"]),ApplicationConfiguration.registerModule("users.admin",["core.admin"]),ApplicationConfiguration.registerModule("users.admin.routes",["core.admin.routes"]),angular.module("core.admin").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Admin",state:"admin",type:"dropdown",roles:["admin"]})}]),angular.module("core.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin",{"abstract":!0,url:"/admin",template:"<ui-view/>",data:{roles:["admin"]}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise(function($injector,$location){$injector.get("$state").transitionTo("not-found",null,{location:!1})}),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/client/views/home.client.view.html"}).state("not-found",{url:"/not-found",templateUrl:"modules/core/client/views/404.client.view.html",data:{ignoreState:!0}}).state("bad-request",{url:"/bad-request",templateUrl:"modules/core/client/views/400.client.view.html",data:{ignoreState:!0}}).state("forbidden",{url:"/forbidden",templateUrl:"modules/core/client/views/403.client.view.html",data:{ignoreState:!0}})}]),angular.module("core").controller("HeaderController",["$scope","$state","Authentication","Menus",function($scope,$state,Authentication,Menus){$scope.$state=$state,$scope.authentication=Authentication,$scope.menu=Menus.getMenu("topbar"),$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").directive("showErrors",["$timeout","$interpolate",function($timeout,$interpolate){var linkFn=function(scope,el,attrs,formCtrl){var inputEl,inputName,inputNgEl,options,showSuccess,toggleClasses,initCheck=!1,showValidationMessages=!1;if(options=scope.$eval(attrs.showErrors)||{},showSuccess=options.showSuccess||!1,inputEl=el[0].querySelector(".form-control[name]")||el[0].querySelector("[name]"),inputNgEl=angular.element(inputEl),inputName=$interpolate(inputNgEl.attr("name")||"")(scope),!inputName)throw"show-errors element has no child input elements with a 'name' attribute class";var reset=function(){return $timeout(function(){el.removeClass("has-error"),el.removeClass("has-success"),showValidationMessages=!1},0,!1)};scope.$watch(function(){return formCtrl[inputName]&&formCtrl[inputName].$invalid},function(invalid){return toggleClasses(invalid)}),scope.$on("show-errors-check-validity",function(event,name){return angular.isUndefined(name)||formCtrl.$name===name?(initCheck=!0,showValidationMessages=!0,toggleClasses(formCtrl[inputName].$invalid)):void 0}),scope.$on("show-errors-reset",function(event,name){return angular.isUndefined(name)||formCtrl.$name===name?reset():void 0}),toggleClasses=function(invalid){return el.toggleClass("has-error",showValidationMessages&&invalid),showSuccess?el.toggleClass("has-success",showValidationMessages&&!invalid):void 0}};return{restrict:"A",require:"^form",compile:function(elem,attrs){if(-1===attrs.showErrors.indexOf("skipFormGroupCheck")&&!elem.hasClass("form-group")&&!elem.hasClass("input-group"))throw"show-errors element does not have the 'form-group' or 'input-group' class";return linkFn}}}]),angular.module("core").factory("authInterceptor",["$q","$injector",function($q,$injector){return{responseError:function(rejection){if(!rejection.config.ignoreAuthModule)switch(rejection.status){case 401:$injector.get("$state").transitionTo("authentication.signin");break;case 403:$injector.get("$state").transitionTo("forbidden")}return $q.reject(rejection)}}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["user","admin"],this.menus={};var shouldRender=function(user){if(~this.roles.indexOf("*"))return!0;if(!user)return!1;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exist")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={roles:options.roles||this.defaultRoles,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){if(options=options||{},this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item","class":options["class"],roles:null===options.roles||"undefined"==typeof options.roles?this.defaultRoles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)this.addSubMenuItem(menuId,options.state,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===parentItemState&&this.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===menuItemState&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].state===submenuItemState&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{roles:["*"]})}]),angular.module("core").service("Socket",["Authentication","$state","$timeout",function(Authentication,$state,$timeout){this.connect=function(){Authentication.user&&(this.socket=io())},this.connect(),this.on=function(eventName,callback){this.socket&&this.socket.on(eventName,function(data){$timeout(function(){callback(data)})})},this.emit=function(eventName,data){this.socket&&this.socket.emit(eventName,data)},this.removeListener=function(eventName){this.socket&&this.socket.removeListener(eventName)}}]),function(){function menuConfig(Menus){Menus.addMenuItem("topbar",{title:"Cliente",state:"cotacoesCliente",type:"dropdown",roles:["cliente"]}),Menus.addSubMenuItem("topbar","cotacoesCliente",{title:"Minhas Cotações",state:"cotacoesCliente.list",roles:["cliente"]}),Menus.addSubMenuItem("topbar","cotacoesCliente",{title:"Nova Cotacao",state:"cotacoesCliente.create",roles:["cliente"]})}angular.module("cotacoes").run(menuConfig),menuConfig.$inject=["Menus"]}(),function(){function routeConfig($stateProvider){$stateProvider.state("cotacoesCliente",{"abstract":!0,url:"/cliente/cotacoes",template:"<ui-view/>"}).state("cotacoesCliente.list",{url:"",templateUrl:"modules/cotacoes/client/views/cliente/solicitacoes/list-solicitacoes.cliente.client.view.html",controller:"SolicitacoesListController",controllerAs:"vm",data:{pageTitle:"Minhas Cotações"}}).state("cotacoesCliente.create",{url:"/create",templateUrl:"modules/cotacoes/client/views/cliente/solicitacoes/form-solicitacao-cliente.client.view.html",controller:"SolicitacoesController",controllerAs:"vm",resolve:{cotacaoResolve:newSolicitaco},data:{roles:["admin","cliente"],pageTitle:"Cotar"}}).state("cotacoesCliente.edit",{url:"/:solicitacaoId/edit",templateUrl:"modules/cotacoes/client/views/cliente/form-solicitacao.cliente.client.view.html",controller:"SolicitacoesController",controllerAs:"vm",resolve:{cotacaoResolve:getSolicitacao},data:{roles:["admin","cliente"],pageTitle:"Editar Solicitação {{ cotacaoResolve.name }}"}}).state("cotacoesCliente.view",{url:"/solicitacao/:solicitacaoId",templateUrl:"modules/cotacoes/client/views/cliente/view-cotacoes.cliente.client.view.html",controller:"CotacoesClienteController",controllerAs:"vm",resolve:{cotacaoResolve:getSolicitacao},data:{pageTitle:"Solicitacao {{ articleResolve.name }}"}})}function getCotacao($stateParams,CotacoesSolicitacaoService){return CotacoesSolicitacaoService.query({solicitacaoId:$stateParams.solicitacaoId}).$promise}function getCotacaoEmAndamento($stateParams,SolicitacoesService){return SolicitacoesService.get({solicitacaoId:$stateParams.solicitacaoId}).$promise}function getSolicitacao($stateParams,SolicitacoesService){return SolicitacoesService.get({solicitacaoId:$stateParams.solicitacaoId}).$promise}function newSolicitaco(SolicitacoesService){return new SolicitacoesService}angular.module("cotacoes").config(routeConfig),routeConfig.$inject=["$stateProvider"],getCotacao.$inject=["$stateParams","CotacoesSolicitacaoService"],getCotacaoEmAndamento.$inject=["$stateParams","SolicitacoesService"],getSolicitacao.$inject=["$stateParams","SolicitacoesService"],newSolicitaco.$inject=["SolicitacoesService"]}(),function(){function menuConfig(Menus){Menus.addMenuItem("topbar",{title:"Fornecedor",state:"cotacoesFornecedor",type:"dropdown",roles:["fornecedor"]}),Menus.addSubMenuItem("topbar","cotacoesFornecedor",{title:"Minhas Cotações",state:"cotacoesFornecedor.list",roles:["fornecedor"]})}angular.module("cotacoes").run(menuConfig),menuConfig.$inject=["Menus"]}(),function(){function routeConfig($stateProvider){$stateProvider.state("cotacoesFornecedor",{"abstract":!0,url:"/cotacoes/fornecedor",template:"<ui-view/>"}).state("cotacoesFornecedor.list",{url:"",templateUrl:"modules/cotacoes/client/views/fornecedor/list-cotacoes.fornecedor.client.view.html",controller:"CotacoesFornecedorListController",controllerAs:"vm",data:{pageTitle:"Minhas Cotações"}}).state("cotacoesFornecedor.create",{url:"/create",templateUrl:"modules/cotacoes/client/views/fornecedor/form-cotacao.fornecedor.client.view.html",controller:"CotacoesFornecedorController",controllerAs:"vm",resolve:{cotacaoResolve:newCotacao},data:{roles:["admin","fornecedor"],pageTitle:"Cotar"}}).state("cotacoesFornecedor.edit",{url:"/:cotacaoId/edit",templateUrl:"modules/cotacoes/client/views/fornecedor/form-cotacao.fornecedor.client.view.html",controller:"CotacoesFornecedorController",controllerAs:"vm",resolve:{cotacaoResolve:getCotacao},data:{roles:["admin","fornecedor"],pageTitle:"Editar Cotação {{ cotacaoResolve.name }}"}}).state("cotacoesFornecedor.view",{url:"/:solicitacaoId",templateUrl:"modules/cotacoes/client/views/fornecedor/view-cotacao.fornecedor.client.view.html",controller:"CotacoesFornecedorController",controllerAs:"vm",resolve:{cotacaoResolve:getSolicitacao},data:{pageTitle:"Cotacao {{ articleResolve.name }}"}})}function getCotacao($stateParams,CotacoesService){return CotacoesService.get({cotacaoId:$stateParams.cotacaoId}).$promise}function getSolicitacao($stateParams,SolicitacoesService){return SolicitacoesService.get({solicitacaoId:$stateParams.solicitacaoId}).$promise}function newCotacao(CotacoesService){return new CotacoesService}angular.module("cotacoes").config(routeConfig),routeConfig.$inject=["$stateProvider"],getCotacao.$inject=["$stateParams","CotacoesService"],getSolicitacao.$inject=["$stateParams","SolicitacoesService"],newCotacao.$inject=["CotacoesService"]}(),function(){function CotacoesClienteController($scope,$state,Authentication,CotacoesService,$stateParams,cotacaoResolve,cotacoesApiService,notificacoesApiService){function remove(){confirm("Are you sure you want to delete?")&&vm.cotacao.$remove($state.go("cotacoes.list"))}function save(isValid){function successCallback(res){toastr.success("Salvo com sucesso"),$state.go("cotacoesFornecedor.list")}function errorCallback(res){vm.error=res.data.message}return isValid?void(vm.cotacao._id?vm.cotacao.$update(successCallback,errorCallback):vm.cotacao.$save(successCallback,errorCallback)):($scope.$broadcast("show-errors-check-validity","vm.form.cotacoForm"),!1)}function calcularTotal(produtos){vm.total=0;for(var i=0;i<produtos.length;i++){var produto=produtos[i];vm.total+=produto.valor*produto.quantidade}vm.total}function listarCotacoes(response){for(var i=0;i<response.length;i++)for(var j=0;j<response[i].produtos.length;j++)vm.cotacoes.push({user:response[i].user,nome:response[i].produtos[j].nome,tipoCotacao:response[i].produtos[j].tipoCotacao,quantidade:response[i].produtos[j].quantidade,dataEntrega:response[i].produtos[j].dataEntrega,disponivel:response[i].produtos[j].disponivel,valor:response[i].produtos[j].valor});vm.cotacoes.length>0?vm.cotacoes=_.groupBy(vm.cotacoes,"nome"):vm.cotacoes={}}function init(){cotacoesApiService.obterPorSolicitacaoId($stateParams.solicitacaoId).success(function(response){listarCotacoes(response)}).error(function(response){})}var vm=this;vm.authentication=Authentication,vm.cotacoes=[],vm.produtos=[],vm.itensSelecionados=[],vm.produtosSelecionados=[],vm.fornecedoresSelecionados=[],vm.solicitacao=cotacaoResolve,vm.error=null,vm.form={},vm.total=0,vm.remove=remove,vm.save=save,vm.adicionarProduto=function(produto){var produtoId=vm.produtosSelecionados.indexOf(produto);produtoId>-1?vm.produtosSelecionados.splice(produtoId,1):vm.produtosSelecionados.push(produto),calcularTotal(vm.produtosSelecionados)},vm.enviarProdutos=function(){return vm.produtosSelecionados.length<=0?void toastr.error("Selecione o(s) produto(s)"):(vm.produtosSelecionados=_.groupBy(vm.produtosSelecionados,function(produto){return produto.user.displayName}),void notificacoesApiService.notificarFornecedoresProdutos(vm.produtosSelecionados).success(function(response){toastr.success("Enviado com sucesso"),$state.go("cotacoesCliente.list")}))},vm.voltar=function(){$state.go("cotacoesCliente.list")},init()}angular.module("cotacoes").controller("CotacoesClienteController",CotacoesClienteController),CotacoesClienteController.$inject=["$scope","$state","Authentication","CotacoesService","$stateParams","cotacaoResolve","cotacoesApiService","notificacoesApiService"]}(),function(){function CotacoesClienteListController(CotacoesService){var vm=this;vm.cotacoes=CotacoesService.query()}angular.module("cotacoes").controller("CotacoesClienteListController",CotacoesClienteListController),CotacoesClienteListController.$inject=["CotacoesService"]}(),function(){function SolicitacoesListController(SolicitacoesService,$filter,Socket,Authentication){function carregarSolicitacoes(){SolicitacoesService.query(function(data){vm.solicitacoes=data,vm.buildPager()})}function init(){carregarSolicitacoes(),Socket.emit("adiciona-usuario",vm.authentication.user)}var vm=this;vm.authentication=Authentication,vm.buildPager=function(){vm.pagedItems=[],vm.itemsPerPage=5,vm.currentPage=1,vm.figureOutItemsToDisplay()},vm.figureOutItemsToDisplay=function(){vm.filteredItems=$filter("filter")(vm.solicitacoes,{$:vm.search}),vm.filterLength=vm.filteredItems.length;var begin=(vm.currentPage-1)*vm.itemsPerPage,end=begin+vm.itemsPerPage;vm.pagedItems=vm.filteredItems.slice(begin,end)},vm.pageChanged=function(){vm.figureOutItemsToDisplay()},Socket.on("envia-cotacao-encerrada",function(data){carregarSolicitacoes()}),init()}angular.module("solicitacoes").controller("SolicitacoesListController",SolicitacoesListController),SolicitacoesListController.$inject=["SolicitacoesService","$filter","Socket","Authentication"]}(),function(){function SolicitacoesController($scope,$state,Authentication,solicitacoes,SegmentosService,SubsegmentosService,notificacoesApiService,Socket,$timeout,$window,FileUploader){function remove(){confirm("Are you sure you want to delete?")&&vm.solicitacao.$remove($state.go("solicitacoes.list"))}function save(isValid){function successCallback(res){var solicitacao={_id:res._id,subSegmento:res.subSegmento};Socket.emit("nova-solicitacao",res),notificacoesApiService.notificarFornecedores(solicitacao).success(function(response){toastr.success("Solicitação enviada com sucesso"),$state.go("cotacoesCliente.list")})}function errorCallback(res){vm.error=res.data.message}return isValid?vm.solicitacao.produtos.length<=0?(toastr.error("Adicione pelo menos um produto"),!1):(vm.solicitacao.tempo=vm.solicitacao.tempoCotacao,void(vm.solicitacao._id?vm.solicitacao.$update(successCallback,errorCallback):vm.solicitacao.$save(successCallback,errorCallback))):($scope.$broadcast("show-errors-check-validity","vm.form.solicitacaoForm"),!1)}var vm=this;vm.authentication=Authentication,vm.segmentos=SegmentosService.query(),vm.subSegmentosQuery=SubsegmentosService.query(),vm.solicitacao=solicitacoes,vm.error=null,vm.form={},vm.produto={},vm.remove=remove,vm.save=save,vm.tipoCotacao=["Unidade","Caixa"],vm.solicitacao.produtos=void 0===vm.solicitacao.produtos?[]:vm.solicitacao.produtos,vm.filtrarSubSegmentosPorSegmento=function(modelSegmento){vm.subSegmentos=[],void 0!==modelSegmento&&vm.subSegmentosQuery.forEach(function(subSegmento){subSegmento.segmento._id===modelSegmento._id&&vm.subSegmentos.push(subSegmento)})},vm.adicionarProduto=function(produto){return null===produto||void 0===produto||void 0===produto.nome||""===produto.nome||void 0===produto.unidadeMedida||void 0===produto.quantidade?void toastr.error("Informe o dados do Produto"):(vm.produto={},vm.uploader.clearQueue(),void vm.solicitacao.produtos.push(produto))},vm.removerProduto=function(produto){var posicao=vm.solicitacao.produtos.indexOf(produto);vm.solicitacao.produtos.splice(posicao,1)},vm.editarProduto=function(produto){var posicao=vm.solicitacao.produtos.indexOf(produto);vm.solicitacao.produtos.splice(posicao,1),vm.produto=produto,vm.produto.posicao=posicao,vm.edicao=!0},vm.salvarEdicao=function(produto){vm.solicitacao.produtos.splice(produto.posicao,0,produto),vm.produto=null,vm.edicao=!1},vm.cancelarEdicao=function(produto){vm.solicitacao.produtos.splice(produto.posicao,0,produto),vm.produto=null,vm.edicao=!1},vm.uploader=new FileUploader({alias:"newProfilePicture"}),vm.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),vm.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){vm.produto.imagemURL=fileReaderEvent.target.result},0)}}},vm.uploader.onSuccessItem=function(fileItem,response,status,headers){$scope.success=!0,vm.cancelUpload()},vm.uploader.onErrorItem=function(fileItem,response,status,headers){vm.cancelUpload(),$scope.error=response.message},vm.uploadProfilePicture=function(){$scope.success=$scope.error=null,vm.uploader.uploadAll()},vm.cancelUpload=function(){vm.uploader.clearQueue(),vm.produto.imagemURL=""}}angular.module("solicitacoes").controller("SolicitacoesController",SolicitacoesController),SolicitacoesController.$inject=["$scope","$state","Authentication","cotacaoResolve","SegmentosService","SubsegmentosService","notificacoesApiService","Socket","$timeout","$window","FileUploader"]}(),function(){function CotacoesFornecedorController($scope,$state,Authentication,CotacoesService,cotacao,$timeout,$stateParams,cotacoesApiService){function remove(){confirm("Are you sure you want to delete?")&&vm.solicitacao.$remove($state.go("solicitacoes.list"))}function save(isValid){function successCallback(res){toastr.success("Cotação salva com sucesso"),$state.go("cotacoesFornecedor.list")}function errorCallback(res){vm.error=res.data.message}return isValid?void(vm.cotacao._id?(vm.cotacao.produtos=vm.solicitacao.produtos,vm.cotacao.$update(successCallback,errorCallback)):(vm.cotacao.solicitacao=vm.solicitacao._id,vm.cotacao.subSegmento=vm.solicitacao.subSegmento._id,vm.cotacao.produtos=vm.solicitacao.produtos,vm.cotacao.$save(successCallback,errorCallback))):($scope.$broadcast("show-errors-check-validity","vm.form.solicitacaoForm"),!1)}function obterDadosSolicitacao(cotacao){vm.solicitacao={_id:cotacao.solicitacao._id,ativo:cotacao.solicitacao.ativo,dataCadastro:cotacao.solicitacao.dataCadastro,produtos:cotacao.produtos,subSegmento:cotacao.subSegmento}}function listarCotacoes(response){for(var i=0;i<response.length;i++)if(response[i].user._id===vm.authentication.user._id)var cotacao=response[i];else for(var j=0;j<response[i].produtos.length;j++)vm.cotacoes.push({user:response[i].user,nome:response[i].produtos[j].nome,tipoCotacao:response[i].produtos[j].tipoCotacao,quantidade:response[i].produtos[j].quantidade,dataEntrega:response[i].produtos[j].dataEntrega,disponivel:response[i].produtos[j].disponivel,valor:response[i].produtos[j].valor});vm.cotacoes.length>0?vm.cotacoes=_.groupBy(vm.cotacoes,"nome"):vm.cotacoes={},void 0!==cotacao&&(obterDadosSolicitacao(cotacao),vm.solicitacao=cotacao,vm.solicitacao.dataCadastro=cotacao.solicitacao.dataCadastro,vm.solicitacao.ativo=cotacao.solicitacao.ativo,vm.solicitacao.subSegmento=cotacao.subSegmento,vm.cotacao=new CotacoesService(cotacao))}function init(){cotacoesApiService.obterPorSolicitacaoId($stateParams.solicitacaoId).success(function(response){listarCotacoes(response)}).error(function(response){})}var vm=this;vm.cotacoes=[],vm.authentication=Authentication,vm.solicitacao=cotacao,vm.cotacao=new CotacoesService,vm.error=null,vm.form={},vm.remove=remove,vm.save=save,vm.calcularSomaTotal=function(){},vm.voltar=function(){$state.go("cotacoesFornecedor.list")},init()}angular.module("cotacoes").controller("CotacoesFornecedorController",CotacoesFornecedorController),CotacoesFornecedorController.$inject=["$scope","$state","Authentication","CotacoesService","cotacaoResolve","$timeout","$stateParams","cotacoesApiService"]}(),function(){function CotacoesFornecedorListController(SolicitacoesSegmentoService,$filter,Socket,Authentication){function carregarSolicitacoes(){SolicitacoesSegmentoService.query(function(data){vm.solicitacoes=data,vm.buildPager()})}function init(){carregarSolicitacoes(),vm.authentication.user.subSegmentos.forEach(function(subSegmento){Socket.emit("carrega-subSegmentos",subSegmento)})}var vm=this;vm.authentication=Authentication,vm.buildPager=function(){vm.pagedItems=[],vm.itemsPerPage=5,vm.currentPage=1,vm.figureOutItemsToDisplay()},vm.figureOutItemsToDisplay=function(){vm.filteredItems=$filter("filter")(vm.solicitacoes,{$:vm.search}),vm.filterLength=vm.filteredItems.length;var begin=(vm.currentPage-1)*vm.itemsPerPage,end=begin+vm.itemsPerPage;vm.pagedItems=vm.filteredItems.slice(begin,end)},vm.pageChanged=function(){vm.figureOutItemsToDisplay()},Socket.on("envia-solicitacao",function(){carregarSolicitacoes()}),Socket.on("envia-cotacao-encerrada",function(data){carregarSolicitacoes()}),init()}angular.module("cotacoes").controller("CotacoesFornecedorListController",CotacoesFornecedorListController),CotacoesFornecedorListController.$inject=["SolicitacoesSegmentoService","$filter","Socket","Authentication"]}(),function(){var app=angular.module("cotacoes");app.directive("myCurrentTime",["$interval","dateFilter","SolicitacoesService","notificacoesApiService","Socket","Authentication",function($interval,dateFilter,SolicitacoesService,notificacoesApiService,Socket,Authentication){return function(scope,element,attrs){function updateTime(){var novaData=new Date;novaData=moment(novaData).format("DD/MM/YYYY HH:mm:ss");var dataSolicitacao=moment.utc(solicitacao.dataCadastro,"YYYY-MM-DD HH:mm:ss").local(),diferencaData=(moment(solicitacao.tempo,"HH:mm:ss"),moment.utc(moment(novaData,"DD/MM/YYYY  HH:mm:ss").diff(moment(dataSolicitacao,"DD/MM/YYYY  HH:mm:ss"))).format("HH:mm:ss")),tempoEmSegundos=moment.duration(diferencaData).asSeconds(),tempoCotacao=moment.duration(moment(solicitacao.tempo).format("HH:mm:ss")).asSeconds();if(tempoCotacao>=tempoEmSegundos){moment.utc(moment(dataSolicitacao,"DD/MM/YYYY  HH:mm:ss").diff(moment(novaData,"DD/MM/YYYY HH:mm:ss"))).local().format("HH:mm:ss");contador=tempoCotacao-tempoEmSegundos,contador=moment().startOf("day").seconds(contador).format("HH:mm:ss")}else solicitacao.ativo?SolicitacoesService.get({solicitacaoId:solicitacao._id}).$promise.then(function(response){$interval.cancel(stopTime),solicitacao=response,solicitacao.ativo=!1,solicitacao.$update();var solicitacaoEncerrada={_id:solicitacao._id,user:user};notificacoesApiService.notificarCliente(solicitacaoEncerrada).success(function(response){}),Socket.emit("cotacao-encerrada",solicitacao)}):$interval.cancel(stopTime);element.text(contador)}var stopTime,solicitacao,contador;scope.$watch(attrs.myCurrentTime,function(value){solicitacao=value,updateTime()}),stopTime=$interval(updateTime,1e3),element.on("$destroy",function(){$interval.cancel(stopTime)})}}]),app.directive("strToTime",function(){return{require:"ngModel",link:function(scope,element,attrs,ngModelController){ngModelController.$parsers.push(function(data){return data?("0"+data.getHours().toString()).slice(-2)+":"+("0"+data.getMinutes().toString()).slice(-2):""}),ngModelController.$formatters.push(function(data){if(!data)return null;var d=new Date(1970,1,1),splitted=data.split(":");return d.setHours(splitted[0]),d.setMinutes(splitted[1]),d})}}})}(),function(){angular.module("solicitacoes").filter("semData",function(){return function(data){return void 0===data?"-":data}}).filter("status",function(){return function(data){return data===!0?"Em andamento ":"Encerrado"}}).filter("isEmpty",[function(){return function(object){return angular.equals({},object)}}])}(),function(){function CotacoesService($resource){return $resource("api/cotacoes/:cotacaoId",{cotacaoId:"@_id"},{update:{method:"PUT"}})}function cotacoesApiService($http){function obterPorSolicitacaoId(id){return $http.get("/api/cotacoes/obterPorSolicitacaoId/"+id)}var services={obterPorSolicitacaoId:obterPorSolicitacaoId};return services}angular.module("cotacoes").factory("CotacoesService",CotacoesService),CotacoesService.$inject=["$resource"],angular.module("cotacoes").factory("cotacoesApiService",["$http",cotacoesApiService])}(),function(){function notificacoesApiService($http){function notificarFornecedores(solicitacao){return $http.post("/api/notificacao/fornecedores",solicitacao)}function notificarCliente(solicitacao){return $http.post("/api/notificacao/cliente",solicitacao)}function notificarFornecedoresProdutos(solicitacao){return $http.post("/api/notificacao/fornecedores/produtos",solicitacao)}var services={notificarFornecedores:notificarFornecedores,notificarCliente:notificarCliente,notificarFornecedoresProdutos:notificarFornecedoresProdutos};return services}angular.module("notificacoes").factory("notificacoesApiService",["$http",notificacoesApiService])}(),function(){function SolicitacoesService($resource){return $resource("api/solicitacoes/:solicitacaoId",{solicitacaoId:"@_id"},{update:{method:"PUT"}})}angular.module("solicitacoes").factory("SolicitacoesService",SolicitacoesService),SolicitacoesService.$inject=["$resource"],angular.module("solicitacoes").factory("SolicitacoesSegmentoService",["$resource",function($resource){return $resource("api/solicitacoesPorSubSegmentos",{})}])}(),function(){function menuConfig(Menus){Menus.addMenuItem("topbar",{title:"Segmentos",state:"segmentos",type:"dropdown",roles:["admin","fornecedor"]}),Menus.addSubMenuItem("topbar","segmentos",{title:"Listar Segmentos",state:"segmentos.list",roles:["admin"]}),Menus.addSubMenuItem("topbar","segmentos",{title:"Criar Segmento",state:"segmentos.create",roles:["admin"]}),Menus.addSubMenuItem("topbar","segmentos",{title:"Adicionar Segmentos/Sub-Segmentos",state:"segmentos.adicionar",roles:["admin","fornecedor"]})}angular.module("segmentos").run(menuConfig),menuConfig.$inject=["Menus"]}(),function(){function routeConfig($stateProvider){$stateProvider.state("segmentos",{"abstract":!0,url:"/segmentos",template:"<ui-view/>"}).state("segmentos.list",{url:"",templateUrl:"modules/segmentos/client/views/list-segmentos.client.view.html",controller:"SegmentosListController",controllerAs:"vm",data:{pageTitle:"Segmentos List"}}).state("segmentos.create",{url:"/create",templateUrl:"modules/segmentos/client/views/form-segmento.client.view.html",controller:"SegmentosController",controllerAs:"vm",resolve:{segmentoResolve:newSegmento},data:{roles:["user","admin"],pageTitle:"Segmentos Create"}}).state("segmentos.adicionar",{url:"/fornecedor/adicionar",templateUrl:"modules/segmentos/client/views/fornecedor/form-segmento.fornecedor.client.view.html",controller:"SegmentosFornecedorController",
controllerAs:"vm",resolve:{segmentoResolve:newSegmento},data:{roles:["admin","fornecedor"],pageTitle:"Segmentos Fornecedor"}}).state("segmentos.edit",{url:"/:segmentoId/edit",templateUrl:"modules/segmentos/client/views/form-segmento.client.view.html",controller:"SegmentosController",controllerAs:"vm",resolve:{segmentoResolve:getSegmento},data:{roles:["user","admin"],pageTitle:"Edit Segmento {{ segmentoResolve.name }}"}}).state("segmentos.view",{url:"/:segmentoId",templateUrl:"modules/segmentos/client/views/view-segmento.client.view.html",controller:"SegmentosController",controllerAs:"vm",resolve:{segmentoResolve:getSegmento},data:{pageTitle:"Segmento {{ articleResolve.name }}"}})}function getSegmento($stateParams,SegmentosService){return SegmentosService.get({segmentoId:$stateParams.segmentoId}).$promise}function newSegmento(SegmentosService){return new SegmentosService}angular.module("segmentos").config(routeConfig),routeConfig.$inject=["$stateProvider"],getSegmento.$inject=["$stateParams","SegmentosService"],newSegmento.$inject=["SegmentosService"]}(),function(){function SegmentosFornecedorController($scope,SegmentosService,SubsegmentosService,Users,Authentication,$timeout){function filtrarSubSegmentosPorSegmento(segmento){void 0!==segmento&&vm.subSegmentosQuery.forEach(function(subSegmento){subSegmento.segmento._id===segmento._id&&vm.subSegmentos.push(subSegmento)})}function retirarSubSegmentoPorSegmento(segmento){var listaAtualSubSegmentos=angular.copy(vm.subSegmentos);void 0!==segmento&&(listaAtualSubSegmentos.forEach(function(subSegmento){if(subSegmento.segmento._id===segmento._id){var posicao=vm.subSegmentos.indexOf(_.find(vm.subSegmentos,{_id:subSegmento._id}));vm.subSegmentos.splice(posicao,1),vm.usuario.subSegmentos=_.reject(vm.usuario.subSegmentos,{_id:subSegmento._id})}}),vm.subSegmentos.length<=0&&(vm.usuario.subSegmentos=[]))}function listarSegmentosESubSegmentos(usuario){vm.listaSegmentos=[],usuario.subSegmentos.forEach(function(subSegmento){vm.listaSegmentos.push(_.find(vm.subSegmentosQuery,{_id:subSegmento}))})}function init(){SegmentosService.query().$promise.then(function(response){vm.segmentos=response}),SubsegmentosService.query().$promise.then(function(response){vm.subSegmentosQuery=response,listarSegmentosESubSegmentos(vm.user)})}var vm=this;vm.user=Authentication.user,vm.usuario={},vm.usuario.segmentos=[],vm.usuario.subSegmentos=[],vm.subSegmentos=[],vm.configuracoesSegmento={enableSearch:!0,scrollableHeight:"250px",scrollable:!0},vm.configuracoesSubSegmento={enableSearch:!0,scrollableHeight:"250px",scrollable:!0},vm.eventosSegmento={onItemSelect:function(segmento){filtrarSubSegmentosPorSegmento(segmento)},onItemDeselect:function(segmento){retirarSubSegmentoPorSegmento(segmento)},onSelectAll:function(){vm.subSegmentos=[]},onDeselectAll:function(){vm.subSegmentos=[],vm.usuario.subSegmentos=[]}},vm.save=function(isValid){function successCallback(response){toastr.success("Salvo com sucesso"),Authentication.user=response,listarSegmentosESubSegmentos(response)}function errorCallback(response){vm.error=response.data.message}if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.form.segmentoForm"),!1;var user=new Users(vm.usuario);user.subSegmentos=_.pluck(vm.usuario.subSegmentos,"_id"),user.$update(successCallback,errorCallback)},vm.remover=function(){function successCallback(response){toastr.success("Removido com sucesso"),Authentication.user=response,listarSegmentosESubSegmentos(response)}function errorCallback(response){vm.error=response.data.message}var user=new Users(vm.usuario);user.subSegmentos=[],user.$update(successCallback,errorCallback)},init()}angular.module("cotacoes").controller("SegmentosFornecedorController",SegmentosFornecedorController),SegmentosFornecedorController.$inject=["$scope","SegmentosService","SubsegmentosService","Users","Authentication","$timeout"]}(),function(){function SegmentosListController(SegmentosService){var vm=this;vm.segmentos=SegmentosService.query()}angular.module("segmentos").controller("SegmentosListController",SegmentosListController),SegmentosListController.$inject=["SegmentosService"]}(),function(){function SegmentosController($scope,$state,Authentication,segmento){function remove(){confirm("Are you sure you want to delete?")&&vm.segmento.$remove($state.go("segmentos.list"))}function save(isValid){function successCallback(res){$state.go("segmentos.view",{segmentoId:res._id})}function errorCallback(res){vm.error=res.data.message}return isValid?void(vm.segmento._id?vm.segmento.$update(successCallback,errorCallback):vm.segmento.$save(successCallback,errorCallback)):($scope.$broadcast("show-errors-check-validity","vm.form.segmentoForm"),!1)}var vm=this;vm.authentication=Authentication,vm.segmento=segmento,vm.error=null,vm.form={},vm.remove=remove,vm.save=save,vm.segmento.ativo=!0}angular.module("segmentos").controller("SegmentosController",SegmentosController),SegmentosController.$inject=["$scope","$state","Authentication","segmentoResolve"]}(),function(){function SegmentosService($resource){return $resource("api/segmentos/:segmentoId",{segmentoId:"@_id"},{update:{method:"PUT"}})}angular.module("segmentos").factory("SegmentosService",SegmentosService),SegmentosService.$inject=["$resource"]}(),function(){function menuConfig(Menus){Menus.addMenuItem("topbar",{title:"Sub-Segmentos",state:"subsegmentos",type:"dropdown",roles:["admin"]}),Menus.addSubMenuItem("topbar","subsegmentos",{title:"Listar Sub-Segmentos",state:"subsegmentos.list",roles:["admin"]}),Menus.addSubMenuItem("topbar","subsegmentos",{title:"Criar Sub-Segmento",state:"subsegmentos.create",roles:["admin"]})}angular.module("subsegmentos").run(menuConfig),menuConfig.$inject=["Menus"]}(),function(){function routeConfig($stateProvider){$stateProvider.state("subsegmentos",{"abstract":!0,url:"/subsegmentos",template:"<ui-view/>"}).state("subsegmentos.list",{url:"",templateUrl:"modules/subsegmentos/client/views/list-subsegmentos.client.view.html",controller:"SubsegmentosListController",controllerAs:"vm",data:{pageTitle:"Subsegmentos List"}}).state("subsegmentos.create",{url:"/create",templateUrl:"modules/subsegmentos/client/views/form-subsegmento.client.view.html",controller:"SubsegmentosController",controllerAs:"vm",resolve:{subsegmentoResolve:newSubsegmento},data:{roles:["user","admin"],pageTitle:"Subsegmentos Create"}}).state("subsegmentos.edit",{url:"/:subsegmentoId/edit",templateUrl:"modules/subsegmentos/client/views/form-subsegmento.client.view.html",controller:"SubsegmentosController",controllerAs:"vm",resolve:{subsegmentoResolve:getSubsegmento},data:{roles:["user","admin"],pageTitle:"Edit Subsegmento {{ subsegmentoResolve.name }}"}}).state("subsegmentos.view",{url:"/:subsegmentoId",templateUrl:"modules/subsegmentos/client/views/view-subsegmento.client.view.html",controller:"SubsegmentosController",controllerAs:"vm",resolve:{subsegmentoResolve:getSubsegmento},data:{pageTitle:"Subsegmento {{ articleResolve.name }}"}})}function getSubsegmento($stateParams,SubsegmentosService){return SubsegmentosService.get({subsegmentoId:$stateParams.subsegmentoId}).$promise}function newSubsegmento(SubsegmentosService){return new SubsegmentosService}angular.module("subsegmentos").config(routeConfig),routeConfig.$inject=["$stateProvider"],getSubsegmento.$inject=["$stateParams","SubsegmentosService"],newSubsegmento.$inject=["SubsegmentosService"]}(),function(){function SubsegmentosListController(SubsegmentosService){var vm=this;vm.subsegmentos=SubsegmentosService.query()}angular.module("subsegmentos").controller("SubsegmentosListController",SubsegmentosListController),SubsegmentosListController.$inject=["SubsegmentosService"]}(),function(){function SubsegmentosController($scope,$state,Authentication,subsegmento,SegmentosService){function remove(){confirm("Are you sure you want to delete?")&&vm.subsegmento.$remove($state.go("subsegmentos.list"))}function save(isValid){function successCallback(res){$state.go("subsegmentos.view",{subsegmentoId:res._id})}function errorCallback(res){vm.error=res.data.message}return isValid?void(vm.subsegmento._id?vm.subsegmento.$update(successCallback,errorCallback):vm.subsegmento.$save(successCallback,errorCallback)):($scope.$broadcast("show-errors-check-validity","vm.form.subsegmentoForm"),!1)}var vm=this;vm.authentication=Authentication,vm.segmentos=SegmentosService.query(),vm.subsegmento=subsegmento,vm.error=null,vm.form={},vm.remove=remove,vm.save=save,vm.subsegmento.ativo=!0}angular.module("subsegmentos").controller("SubsegmentosController",SubsegmentosController),SubsegmentosController.$inject=["$scope","$state","Authentication","subsegmentoResolve","SegmentosService"]}(),function(){function SubsegmentosService($resource){return $resource("api/subsegmentos/:subsegmentoId",{subsegmentoId:"@_id"},{update:{method:"PUT"}})}angular.module("subsegmentos").factory("SubsegmentosService",SubsegmentosService),SubsegmentosService.$inject=["$resource"]}(),angular.module("users.admin").run(["Menus",function(Menus){Menus.addSubMenuItem("topbar","admin",{title:"Manage Users",state:"admin.users"})}]),angular.module("users.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin.users",{url:"/users",templateUrl:"modules/users/client/views/admin/list-users.client.view.html",controller:"UserListController"}).state("admin.user",{url:"/users/:userId",templateUrl:"modules/users/client/views/admin/view-user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}}).state("admin.user-edit",{url:"/users/:userId/edit",templateUrl:"modules/users/client/views/admin/edit-user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/client/views/settings/settings.client.view.html",data:{roles:["admin","cliente","fornecedor"]}}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/client/views/settings/edit-profile.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/client/views/settings/change-password.client.view.html"}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/client/views/settings/manage-social-accounts.client.view.html"}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/client/views/settings/change-profile-picture.client.view.html"}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/client/views/authentication/authentication.client.view.html"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/client/views/authentication/signup.client.view.html"}).state("authentication.signin",{url:"/signin?err",templateUrl:"modules/users/client/views/authentication/signin.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/client/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/client/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/client/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/client/views/password/reset-password.client.view.html"})}]),angular.module("users.admin").controller("UserListController",["$scope","$filter","Admin",function($scope,$filter,Admin){Admin.query(function(data){$scope.users=data,$scope.buildPager()}),$scope.buildPager=function(){$scope.pagedItems=[],$scope.itemsPerPage=15,$scope.currentPage=1,$scope.figureOutItemsToDisplay()},$scope.figureOutItemsToDisplay=function(){$scope.filteredItems=$filter("filter")($scope.users,{$:$scope.search}),$scope.filterLength=$scope.filteredItems.length;var begin=($scope.currentPage-1)*$scope.itemsPerPage,end=begin+$scope.itemsPerPage;$scope.pagedItems=$scope.filteredItems.slice(begin,end)},$scope.pageChanged=function(){$scope.figureOutItemsToDisplay()}}]),angular.module("users.admin").controller("UserController",["$scope","$state","Authentication","userResolve",function($scope,$state,Authentication,userResolve){$scope.authentication=Authentication,$scope.user=userResolve,$scope.remove=function(user){confirm("Are you sure you want to delete this user?")&&(user?(user.$remove(),$scope.users.splice($scope.users.indexOf(user),1)):$scope.user.$remove(function(){$state.go("admin.users")}))},$scope.update=function(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var user=$scope.user;user.$update(function(){$state.go("admin.user",{userId:user._id})},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("users").controller("AuthenticationController",["$scope","$state","$http","$location","$window","Authentication","PasswordValidator",function($scope,$state,$http,$location,$window,Authentication,PasswordValidator){$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.tipoUsuario=[{_id:1,nome:"Cliente"},{_id:2,nome:"Fornecedor"}],$scope.credentials={},$scope.credentials.tipoUsuario=[],$scope.credentials.roles=[],$scope.settings={externalIdProp:""},$scope.error=$location.search().err,$scope.authentication.user&&$location.path("/"),$scope.signup=function(isValid){return $scope.error=null,isValid?($scope.credentials.tipoUsuario.forEach(function(tipo){$scope.credentials.roles.push(tipo.nome.toLowerCase())}),void $http.post("/api/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go($state.previous.state.name||"home",$state.previous.params)}).error(function(response){$scope.error=response.message})):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.signin=function(isValid){return $scope.error=null,isValid?void $http.post("/api/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go($state.previous.state.name||"home",$state.previous.params)}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.callOauthProvider=function(url){$state.previous&&$state.previous.href&&(url+="?redirect_to="+encodeURIComponent($state.previous.href)),$window.location.href=url}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication","PasswordValidator",function($scope,$stateParams,$http,$location,Authentication,PasswordValidator){$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","forgotPasswordForm"),!1)},$scope.resetUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","resetPasswordForm"),!1)}}]),angular.module("users").controller("ChangePasswordController",["$scope","$http","Authentication","PasswordValidator",function($scope,$http,Authentication,PasswordValidator){$scope.user=Authentication.user,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.changeUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/users/password",$scope.passwordDetails).success(function(response){$scope.$broadcast("show-errors-reset","passwordForm"),$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","passwordForm"),!1)}}]),angular.module("users").controller("ChangeProfilePictureController",["$scope","$timeout","$window","Authentication","FileUploader",function($scope,$timeout,$window,Authentication,FileUploader){$scope.user=Authentication.user,$scope.imageURL=$scope.user.profileImageURL,$scope.uploader=new FileUploader({url:"api/users/picture",alias:"newProfilePicture"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response,status,headers){$scope.success=!0,$scope.user=Authentication.user=response,$scope.cancelUpload()},$scope.uploader.onErrorItem=function(fileItem,response,status,headers){$scope.cancelUpload(),$scope.error=response.message},$scope.uploadProfilePicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL=$scope.user.profileImageURL}}]),angular.module("users").controller("EditProfileController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.updateUserProfile=function(isValid){if($scope.success=$scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var user=new Users($scope.user);user.$update(function(response){$scope.$broadcast("show-errors-reset","userForm"),$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}}]),angular.module("users").controller("SocialAccountsController",["$scope","$http","Authentication",function($scope,$http,Authentication){$scope.user=Authentication.user,$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","Authentication",function($scope,Authentication){$scope.user=Authentication.user}]),angular.module("users").directive("passwordValidator",["PasswordValidator",function(PasswordValidator){return{require:"ngModel",link:function(scope,element,attrs,ngModel){ngModel.$validators.requirements=function(password){var status=!0;if(password){var result=PasswordValidator.getResult(password),requirementsIdx=0,requirementsMeter=[{color:"danger",progress:"20"},{color:"warning",progress:"40"},{color:"info",progress:"60"},{color:"primary",progress:"80"},{color:"success",progress:"100"}];result.errors.length<requirementsMeter.length&&(requirementsIdx=requirementsMeter.length-result.errors.length-1),scope.requirementsColor=requirementsMeter[requirementsIdx].color,scope.requirementsProgress=requirementsMeter[requirementsIdx].progress,result.errors.length?(scope.popoverMsg=PasswordValidator.getPopoverMsg(),scope.passwordErrors=result.errors,status=!1):(scope.popoverMsg="",scope.passwordErrors=[],status=!0)}return status}}}}]),angular.module("users").directive("passwordVerify",[function(){return{require:"ngModel",scope:{passwordVerify:"="},link:function(scope,element,attrs,ngModel){scope.$watch(function(){var combined;return(scope.passwordVerify||ngModel)&&(combined=scope.passwordVerify+"_"+ngModel),combined},function(value){value&&(ngModel.$validators.passwordVerify=function(password){var origin=scope.passwordVerify;return origin!==password?!1:!0})})}}}]),angular.module("users").directive("lowercase",function(){return{require:"ngModel",link:function(scope,element,attrs,modelCtrl){modelCtrl.$parsers.push(function(input){return input?input.toLowerCase():""}),element.css("text-transform","lowercase")}}}),angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]),angular.module("users").factory("PasswordValidator",["$window",function($window){var owaspPasswordStrengthTest=$window.owaspPasswordStrengthTest;return{getResult:function(password){var result=owaspPasswordStrengthTest.test(password);return result},getPopoverMsg:function(){var popoverMsg="Please enter a passphrase or password with greater than 10 characters, numbers, lowercase, upppercase, and special characters.";return popoverMsg}}}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("api/users",{},{update:{method:"PUT"}})}]),angular.module("users.admin").factory("Admin",["$resource",function($resource){return $resource("api/users/:userId",{userId:"@_id"},{update:{method:"PUT"}})}]);